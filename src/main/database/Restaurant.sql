-- üìå T·∫°o c∆° s·ªü d·ªØ li·ªáu
CREATE DATABASE IF NOT EXISTS Restaurant;
USE Restaurant;

-- 1. B·∫£ng danh m·ª•c nguy√™n li·ªáu (IngredientCategories)
CREATE TABLE IF NOT EXISTS IngredientCategories (
                                                    CategoryID INT PRIMARY KEY AUTO_INCREMENT,
                                                    Name VARCHAR(100) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- 2. B·∫£ng danh m·ª•c m√≥n ƒÉn (Categories)
CREATE TABLE IF NOT EXISTS Categories (
                                          CategoryID INT PRIMARY KEY AUTO_INCREMENT,
                                          Name VARCHAR(50) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- 3. B·∫£ng lo·∫°i giao d·ªãch kho (TransactionTypes)
CREATE TABLE IF NOT EXISTS TransactionTypes (
                                                TransactionTypeID INT PRIMARY KEY AUTO_INCREMENT,
                                                TypeName ENUM('Nh·∫≠p kho', 'ƒêi·ªÅu ch·ªânh t·ªìn kho', 'H·ªßy nguy√™n li·ªáu') NOT NULL UNIQUE
) ENGINE=InnoDB;

-- 4. B·∫£ng ng∆∞·ªùi d√πng (Users)
CREATE TABLE IF NOT EXISTS Users (
                                     UserID INT PRIMARY KEY AUTO_INCREMENT,
                                     Username VARCHAR(50) UNIQUE NOT NULL,
                                     PasswordHash VARCHAR(255) NOT NULL,
                                     Role ENUM('MANAGER', 'CHEF', 'CASHIER') NOT NULL,
                                     CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- 5. B·∫£ng nh√¢n vi√™n (Employees)
CREATE TABLE IF NOT EXISTS Employees (
                                         EmployeeID INT PRIMARY KEY AUTO_INCREMENT,
                                         FullName VARCHAR(100) NOT NULL,
                                         DateOfBirth DATE,
                                         PhoneNumber VARCHAR(15),
                                         Address TEXT,
                                         Role ENUM('MANAGER', 'CHEF', 'CASHIER', 'SERVICE') NOT NULL,
                                         HireDate DATE NOT NULL
) ENGINE=InnoDB;

-- 6. B·∫£ng l√≠ do ngh·ªâ ph√©p (LeaveRecords)
CREATE TABLE IF NOT EXISTS LeaveRecords (
                                            LeaveID INT PRIMARY KEY AUTO_INCREMENT,
                                            EmployeeID INT NOT NULL,
                                            StartDate DATE NOT NULL,
                                            EndDate DATE NOT NULL,
                                            Reason TEXT,
                                            FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
) ENGINE=InnoDB;

-- 7. B·∫£ng th·ª±c ƒë∆°n (MenuItems) - c·∫ßn tham chi·∫øu ƒë·∫øn Categories
CREATE TABLE IF NOT EXISTS MenuItems (
                                         ItemID INT PRIMARY KEY AUTO_INCREMENT,
                                         Name VARCHAR(100) NOT NULL,
                                         Price DECIMAL(10, 2) NOT NULL,
                                         Description TEXT,
                                         CategoryID INT NOT NULL,
                                         CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                         FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 8. B·∫£ng ƒë∆°n h√†ng (Orders)
CREATE TABLE IF NOT EXISTS Orders (
                                      OrderID INT PRIMARY KEY AUTO_INCREMENT,
                                      TotalAmount DECIMAL(10, 2) NOT NULL,
                                      OrderDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                      Status ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'PAID') DEFAULT 'PENDING'
) ENGINE=InnoDB;

-- 9. B·∫£ng chi ti·∫øt ƒë∆°n h√†ng (OrderDetails) - tham chi·∫øu ƒë·∫øn Orders v√† MenuItems
CREATE TABLE IF NOT EXISTS OrderDetails (
                                            OrderDetailID INT PRIMARY KEY AUTO_INCREMENT,
                                            OrderID INT NOT NULL,
                                            ItemID INT NOT NULL,
                                            Quantity INT NOT NULL,
                                            Price DECIMAL(10, 2) NOT NULL,
                                            FOREIGN KEY (OrderID) REFERENCES Orders(OrderID) ON DELETE CASCADE,
                                            FOREIGN KEY (ItemID) REFERENCES MenuItems(ItemID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 10. B·∫£ng b√°o c√°o doanh thu (RevenueReports)
CREATE TABLE IF NOT EXISTS RevenueReports (
                                              ReportID INT PRIMARY KEY AUTO_INCREMENT,
                                              ReportMonth VARCHAR(7) NOT NULL,  -- V√≠ d·ª•: '2025-02'
                                              TotalRevenue DECIMAL(10, 2) NOT NULL,
                                              TotalQuantity INT NOT NULL
) ENGINE=InnoDB;

-- 11. B·∫£ng nguy√™n li·ªáu (Ingredients) - tham chi·∫øu ƒë·∫øn IngredientCategories
CREATE TABLE IF NOT EXISTS Ingredients (
                                           IngredientID INT PRIMARY KEY AUTO_INCREMENT,
                                           Name VARCHAR(255) NOT NULL,
                                           CategoryID INT,
                                           Unit VARCHAR(50) NOT NULL,
                                           Stock FLOAT NOT NULL DEFAULT 0,
                                           MinStock FLOAT NOT NULL DEFAULT 0,
                                           PricePerUnit DECIMAL(10,2) NOT NULL,
                                           FOREIGN KEY (CategoryID) REFERENCES IngredientCategories(CategoryID) ON DELETE SET NULL
) ENGINE=InnoDB;

-- 12. B·∫£ng giao d·ªãch kho (InventoryTransactions) - tham chi·∫øu ƒë·∫øn Ingredients v√† TransactionTypes
CREATE TABLE IF NOT EXISTS InventoryTransactions (
                                                     TransactionID INT PRIMARY KEY AUTO_INCREMENT,
                                                     TransactionTypeID INT NOT NULL,
                                                     SupplierName VARCHAR(255),
                                                     IngredientID INT NOT NULL,
                                                     Quantity FLOAT NOT NULL,
                                                     Unit VARCHAR(50) NOT NULL,
                                                     Price DECIMAL(10,2),
                                                     Note TEXT,
                                                     TransactionDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
                                                     FOREIGN KEY (IngredientID) REFERENCES Ingredients(IngredientID) ON DELETE CASCADE,
                                                     FOREIGN KEY (TransactionTypeID) REFERENCES TransactionTypes(TransactionTypeID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 13. B·∫£ng l∆∞u tr·ªØ t·ªìn kho h√†ng ng√†y (DailyStock) - tham chi·∫øu ƒë·∫øn Ingredients
CREATE TABLE IF NOT EXISTS DailyStock (
                                          StockID INT PRIMARY KEY AUTO_INCREMENT,
                                          IngredientID INT NOT NULL,
                                          Name VARCHAR(255) NOT NULL,
                                          CategoryID INT,
                                          Unit VARCHAR(50) NOT NULL,
                                          Stock FLOAT NOT NULL,
                                          MinStock FLOAT NOT NULL,
                                          PricePerUnit DECIMAL(10,2) NOT NULL,
                                          Date DATE NOT NULL,
                                          FOREIGN KEY (IngredientID) REFERENCES Ingredients(IngredientID) ON DELETE CASCADE,
                                          UNIQUE (IngredientID, Date)
) ENGINE=InnoDB;

